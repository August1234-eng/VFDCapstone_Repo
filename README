# README_VFD


## Project Name: Final VFD Inverter

### Description:
This project involves the design and implementation of a cost-effective, reliable, and efficient Variable Frequency Drive (VFD) tailored for electric vehicles (EVs). The VFD operates at a voltage level of up to 415V and a frequency range of 20-120 Hz, providing efficient and precise control of AC induction motors typically used in the EV industry. The control system is built around an ATMEGA328P microcontroller, integrated into a custom-designed printed circuit board (PCB), and employs conventional V/Hz control algorithms alongside advanced IGBT power electronics.

### Prerequisites:
Before you begin, ensure you have met the following requirements:
- PCB with an ATMEGA328P microcontroller.
- Power PCB (IGBTs, diodes, capacitors, bleeder-resistors, etc.).
- Power supply capable of providing the required input voltage.
- Necessary testing equipment such as an oscilloscope for waveform analysis.
- Multimeter
- Crosshead/Flathead screwdriver
- Power Cables
- A computer for uploading the firmware to the microcontroller.

### Files Included:
- FinalVFD.ino: The main firmware code for the VFD inverter.

### Installation and Setup:

1. **Prepare the PCB**:
   - Wire up the control PCB and Power PCB per the schematics
   - Double-check the connections, especially for the ATMEGA328P microcontroller, power components, and signal lines.
   - Set the potentiometer to the lowest frequency setting

2. **Upload the Firmware**:
   - Use a programmer (e.g., USBasp or Arduino as ISP) to upload the `FinalVFD.ino` code to the ATMEGA328P microcontroller.
   - Ensure the correct fuse bits are set for optimal operation of the microcontroller.

3. **Power Up the Circuit**:
   - Connect the PCB to an appropriate power supply.
   - Power up the circuit and ensure that the microcontroller initializes correctly.
   - Verify VFD output using the oscilloscope.

### Usage:

1. **Operating the VFD**:
   - Once powered on, the VFD system will regulate the motor's speed based on the input frequency.
   - The VFD is designed to vary the frequency and voltage supplied to the motor, controlling its speed and torque effectively.

2. **Testing and Monitoring**:
   - Connect the output of the VFD to an oscilloscope to monitor the waveform and ensure proper operation.
   - Adjust parameters in the firmware if necessary to fine-tune the performance based on specific motor characteristics.

3. **Modifying the Code**:
   - If you need to change the operating parameters, modify the `FinalVFD.ino` code in an appropriate IDE, such as the Arduino IDE.
   - Re-upload the modified code to the ATMEGA328P microcontroller following the same steps outlined above.

### Troubleshooting:
- **General Troubleshooting**: Use a multimeter to verify voltages and currents at inputs and outputs of key components such as the AC-DC converters and DC-DC buck converter.
- **No Output from Circuit**: Verify all connections on the PCB, especially those involving the microcontroller and power components.
- **Inconsistent Motor Operation**: Check the firmware settings for frequency and voltage outputs and ensure they match the motor's specifications.
- **Overheating Components**: Ensure proper cooling and check the load conditions to prevent excessive heat build-up in the power electronics.



